{"version":3,"sources":["resource/Card/Card.module.css","resource/Card/Cards.jsx","API/index.js","resource/Chart/Chart.jsx","resource/EachCountry/EachCountry.jsx","App.js","index.js","App.module.css","resource/Chart/Chart.module.css","resource/EachCountry/Each.module.css","images/covid19.jpeg"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","cx","card","first","class","start","end","value","duration","separator","Date","toDateString","href","target","second","third","url","fetchForCards","country","a","updatingUrl","axios","get","preciseData","console","log","showDailyData","theDailyData","map","theData","infected","total","date","reportDate","fetchEachCountry","countries","name","Chart","useState","Ddata","setDdata","useEffect","displayDailyData","showLineChart","length","labels","datasets","label","borderColor","backgroundColor","fill","EachCountry","handleChaquePays","eachCountry","setEachCountry","showCountries","FormControl","NativeSelect","defaultValue","onChange","e","key","App","state","myData","setState","this","img","src","covidImg","alt","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d349994a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__1fwiL\",\"card\":\"Card_card__3joRV\",\"first\":\"Card_first__1qZXa\",\"second\":\"Card_second__2BQFo\",\"third\":\"Card_third__1DXsI\"};","import React from 'react';\nimport styles from './Card.module.css';\nimport cx from 'classnames';//for multiple styling\nimport CountUp from 'react-countup';\n\n/* const Cards = (props) => {\n    console.log(props) to fetch data & show it on cards.jsx do the below*/\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate} }) => {\n        if(!confirmed){\n            return 'Searching ...'\n        }\nreturn(//cards from materializedcss\n        <div className={styles.container}>\n        <div className={cx(styles.card, styles.first)}> \n            <div class=\"col s12 m6\">\n            <div class=\"card blue-grey darken-1\">\n            <div class=\"card-content white-text\">\n             <p>Confirmed-Infection</p>\n            {/* <p>{confirmed.value}</p> just to add countup do the below */}\n            <CountUp \n                start={0}\n                end={confirmed.value}//value is shown on browser inspect\n                duration={10}\n                separator=\",\"\n            />\n            <p>{new Date(lastUpdate).toDateString()}</p>\n            <p>Covid-19 Pandemic Current Information</p>\n                </div>\n            <div class=\"card-action\">\n            <a href=\"https://www.who.int/\" target=\"_blank\">Link to WHO</a>\n           \n             </div>\n             </div>\n            </div>\n        </div> \n\n        {/* Recovered */}\n        <div className={cx(styles.card, styles.second)}> \n            <div class=\"card blue-grey darken-1\">\n            <div class=\"card-content white-text\">\n             <p>Recovered-Patients</p>\n             <CountUp \n                start={0}\n                end={recovered.value}\n                duration={10}\n                separator=\",\"\n             />\n            <p>{new Date(lastUpdate).toDateString()}</p>\n            <p>Covid-19 Pandemic Current Information</p>\n                </div>\n            <div class=\"card-action\">\n            <a href=\"https://www.who.int/\" target=\"_blank\">Link to WHO</a>\n           \n             </div>\n             </div>\n            </div>\n            {/* deaths */}\n            <div className={cx(styles.card, styles.third)}> \n            <div class=\"card blue-grey darken-1\">\n            <div class=\"card-content white-text\">\n             <p>Confirmed-Deaths</p>\n             <CountUp \n                start={0}\n                end={deaths.value}\n                duration={10}\n                separator=\",\"\n             />\n            <p>{new Date(lastUpdate).toDateString()}</p>\n            <p>Covid-19 Pandemic Current Information</p>\n                </div>\n            <div class=\"card-action\">\n            <a href=\"https://www.who.int/\" target=\"_blank\">Link to WHO</a>\n           \n             </div>\n             </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cards;","\n/* exporting url for cards */\n/* import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchForCards = async()=>{\n\n    try{\n        const response = await axios.get(url);\n        return response\n    }\n    catch (error){\n        console.log(error)\n    }\n} to target the right data do the below*/\nimport axios from 'axios';\n\n/* fetchdata for Cards.jsx */\nconst url = 'https://covid19.mathdro.id/api';\n\n    \nexport const fetchForCards = async(country)=>{//chaquepays\n    let updatingUrl = url;//this\n    if(country){\n        updatingUrl = `${url}/countries/${country}`//.... are added to populate the cards with eachcountry data\n    }\n     \n    try {\n    const {data} = await axios.get(updatingUrl); //{data} is from inspect, to populate the cards with eachcountry data changed to y later \n    const preciseData = {\n        confirmed: data.confirmed,\n        recovered: data.recovered,\n        deaths: data.deaths,\n        lastUpdate: data.lastUpdate\n    }\n            return preciseData\n    }\n    catch (error){\n        console.log(error)\n    }\n}\n\n/* fetchdata for Chart.jsx */\n\nexport const showDailyData = async()=>{\n    try{\n        const {data} = await axios.get(`${url}/daily`);\n            const theDailyData = data.map((theData) =>({\n            infected: theData.confirmed.total,\n            recovered: theData.recovered.total,\n            deaths: theData.deaths.total,\n            date: theData.reportDate\n        })) \n        return theDailyData\n        //console.log(data)\n    }\n    catch(error){\n        console.log(error);//& export showDailyData to Chart.jsx\n    }\n}\n\n\n/* fetchdata for EachCountry.jsx */\n /* export const fetchEachCountry = async()=>{\n    try{\n        const response = await axios.get(`${url}/countries`);\n        console.log(response);\n    }\n    catch(error){\n        console.log(error);\n    }\n}  it works, once we ve seen list of countries we ll change it to the below*/\n\nexport const fetchEachCountry = async()=>{\n    try{\n        const {data: {countries}} = await axios.get(`${url}/countries`);\n        return countries.map((country)=>country.name);\n    }\n    catch(error){\n        console.log(error);//then, export it to EachCountry.jsx, finally we ll go to the first apifetch and update it\n    }\n}\n \n ","import React, {useState, useEffect} from 'react';\nimport {showDailyData} from '../../API';\nimport {Line, Bar} from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = () =>{\n    const [Ddata, setDdata] = useState([]);//same as state={Ddata: []};\n\nuseEffect (()=>{\n    const displayDailyData = async()=>{\n        setDdata(await showDailyData())\n    }\n    //console.log(Ddata);\n    displayDailyData();\n})\n//display global line-chart below\nconst showLineChart = (\n    /* Ddata[0] */ Ddata.length !== \"\" ? (\n    <Line \n        data={{\n            //labels: Ddata.map(({date})=> date),\n            //datasets: [{},{}]before the data was mapped\n            labels: Ddata.map(({date})=> date),\n            datasets: [\n                //{ data: Ddata.map(({confirmed})=>confirmed)}before,\n                //{data: Ddata.map(({deaths})=>deaths)}\n                { data: Ddata.map(({infected})=>infected), label: 'Infected', borderColor:'rgba(255,0,0,1)', backgroundColor:'rgba(255,0,0,.4)', fill: true},\n                {data: Ddata.map(({deaths})=>deaths), label: 'Deaths', borderColor: 'rgba(0,0,255,1)', backgroundColor:'rgba(0,0,255,.4)', fill: true},\n                    ],\n        }}\n    /> ) : null\n)\n    return(\n        //<h1> Chart</h1>\n        <div className={styles.container}>\n            {showLineChart}\n        </div>\n        )\n    }\n\n \n \nexport default Chart;","import React, {useState, useEffect} from 'react';\nimport {NativeSelect, FormControl} from '@material-ui/core';//input field\nimport styles from './Each.module.css';\nimport {fetchEachCountry} from '../../API';\n\n//const EachCountry = () => {//after handleChaquePays on App.jsx, instead of this the below\nconst EachCountry = ({handleChaquePays}) => {\nconst [eachCountry, setEachCountry] = useState([]);\n\nuseEffect(()=>{\n    const showCountries = async ()=>{\n        setEachCountry (await fetchEachCountry());\n   }\n    //console.log(eachCountry);//we ll delete this when we map the data inside return & pass it inside option \n    showCountries();\n},[setEachCountry]);//to avoid infinite loop\n//console.log(eachCountry);//dlt it once eachCountry.map is done for chaquePays\n\n\nreturn(\n    //<h1> EachCountry</h1>instead of it, do the below\n    <FormControl className={styles.container}>\n        <NativeSelect defaultValue=\"\" onChange={(e)=>handleChaquePays(e.target.value)}> \n            <option value=\"global\">All Countries</option>\n            {eachCountry.map((country, a)=><option key={a} value={country}>{country}</option>)} \n        </NativeSelect>\n    </FormControl>//go to App.jsx & set a state ...\n    )\n}\n\nexport default EachCountry;","import React, { Component } from 'react';\nimport Cards from './resource/Card/Cards';\nimport Chart from './resource/Chart/Chart';\nimport EachCountry from './resource/EachCountry/EachCountry';\nimport styles from './App.module.css';\nimport {fetchForCards} from './API';\nimport covidImg from './images/covid19.jpeg';\n//import {fetchEachCountry} from './API';\n\nclass App extends Component {\n  state = {\n    data: {},\n    country: ''\n  }\n\n   \n//fetching the data\nasync componentDidMount(){\n  const myData = await fetchForCards()\n  this.setState({\n    data: myData\n  })\n  //console.log(myData);\n}\nhandleChaquePays = async (country)=>{\n  const myData = await fetchForCards(country);\n  //console.log(data);//we see list of countries, then, we ll change the api to get the data for each countries\n  this.setState({\n    data: myData, country: country\n  }) \n}\n\nrender(){\n\nreturn (\n    <div className={styles.container}>\n        {/* <h2>App.js</h2> */}\n        <img className={styles.img} src={covidImg} alt=\"covid-19\"/>\n        <Cards data={this.state.data}/>\n        <EachCountry handleChaquePays={this.handleChaquePays}/>{/* call it @ it to EachCountry.ejx */}\n        <Chart />\n    </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"img\":\"App_img__2TF4E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2x6xw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Each_container__rc3Hr\"};","module.exports = __webpack_public_path__ + \"static/media/covid19.5527464a.jpeg\";"],"sourceRoot":""}